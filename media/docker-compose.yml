version: '3'
services:

  jellyfin:
    image: ghcr.io/linuxserver/jellyfin:latest
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
      PUID: '${PUID}'
      PGID: '${PGID}'
      DOCKER_MODS: 'linuxserver/mods:jellyfin-amd'
    volumes:
      - /mnt/user/appdata/jellyfin:/config
      - /mnt/user/media/movies:/data/media/movies
      - /mnt/user/media/music:/data/media/music
      - /mnt/user/media/other:/data/media/other
      - /mnt/user/media/series:/data/media/series
      - /tmp/jellyfin:/transcodes
    devices:
      - /dev/dri:/dev/dri
    labels:
      traefik.enable: true
      traefik.http.routers.jellyfin.entrypoints: 'websecure'
      traefik.http.routers.jellyfin.rule: 'Host(`${DOMAIN_JELLYFIN_PUBLIC}`, `${DOMAIN_JELLYFIN}`)'
      traefik.http.services.jellyfin.loadbalancer.server.port: '8096'
    networks:
      proxy:


  radarr:
    image: ghcr.io/linuxserver/radarr:latest
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
      PUID: '${PUID}'
      PGID: '${PGID}'
    volumes:
      - /mnt/user/appdata/radarr:/config
      - /mnt/user/media:/data
    labels:
      traefik.enable: true
      traefik.http.routers.radarr.entrypoints: 'websecure'
      traefik.http.routers.radarr.rule: 'Host(`${DOMAIN_RADARR}`)'
    networks:
      proxy:


  lidarr:
    image: ghcr.io/linuxserver/lidarr:latest
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
      PUID: '${PUID}'
      PGID: '${PGID}'
    volumes:
      - /mnt/user/appdata/lidarr:/config
      - /mnt/user/media:/data
    labels:
      traefik.enable: true
      traefik.http.routers.lidarr.entrypoints: 'websecure'
      traefik.http.routers.lidarr.rule: 'Host(`${DOMAIN_LIDARR}`)'
    networks:
      proxy:


  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
      PUID: '${PUID}'
      PGID: '${PGID}'
    volumes:
      - /mnt/user/appdata/sonarr:/config
      - /mnt/user/media:/data
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr.entrypoints: 'websecure'
      traefik.http.routers.sonarr.rule: 'Host(`${DOMAIN_SONARR}`)'
    networks:
      proxy:


  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:develop
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
      PUID: '${PUID}'
      PGID: '${PGID}'
    volumes:
      - /mnt/user/appdata/prowlarr:/config
    labels:
      traefik.enable: true
      traefik.http.routers.prowlarr.entrypoints: 'websecure'
      traefik.http.routers.prowlarr.rule: 'Host(`${DOMAIN_PROWLARR}`)'
    networks:
      proxy:


  transmission:
    image: ghcr.io/linuxserver/transmission:latest
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
      PUID: '${PUID}'
      PGID: '${PGID}'
    volumes:
      - /mnt/user/appdata/transmission:/config
      - /mnt/user/media/torrents:/data/torrents
      - /mnt/user/media/torrents:/downloads
      - /mnt/user/media/torrents/watch:/watch
    labels:
      traefik.enable: true
      traefik.http.routers.transmission.entrypoints: 'websecure'
      traefik.http.routers.transmission.rule: 'Host(`${DOMAIN_TRANSMISSION}`)'
      traefik.http.services.transmission.loadbalancer.server.port: '9091'
    networks:
      proxy:


networks:
  proxy:
    external: true
